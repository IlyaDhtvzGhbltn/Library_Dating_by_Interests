001 - (1)
Create user profile controller contains 4 endpoints :
post	api/user/auth/viayoutube (string youtubeToken) ret: internalToken, internalUserId
get		api/user/profile/{internalToken} ret: CustomerProfile
patch	api/user/profile/{internalToken} (CustomerProfile) ret: 200 | 401 | 500
delete	api/user/profile/{internalToken} ret 200 | 401 | 500
All methods have to work with abstractions which substitute database.

002
Create Dating Controller which contains three methods:
get 	api/v1/dating/user/{internal_id}
get 	api/v1/dating/ (dating_criteria) return urls["api/dating/user/{internal_id}"]
patch	api/dating/user/{internal_id} (reaction=like|dislike)
Methods should manage dummy services.

003
Create Dialogs Controller and dummy implementation

GET api/dialogs/(internal user token) - 
returns cutted dialogs collection. include interlocutor avatar, last message, last message time, new messages count
GET api/dialogs/(dialogId) - 
sent params offset&count returned obj{sender(avatar, name), messages[]{text, date}}
POST api/dialogs/(dialogId) - 
sends message
DELETE api/dialog/(dialogId) - 
deletes dialog for both users

004
Code Refactor
Move Internal User Id and Internal Bearer Token from body to headers for all controllers methods.

005
Create Controller for user photos.
Images should be stored in Azure Cloud and be accessed by URI.  

006
DB Code-first refactoring and actualising

007
JWT implementation
